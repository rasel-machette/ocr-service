spring.datasource.url=jdbc:postgresql://localhost:5432/invoicing
spring.datasource.username=postgres
spring.datasource.password=173774
spring.datasource.hikari.max-lifetime=600000
spring.datasource.testWhileIdle=true
spring.datasource.test-on-borrow=true
spring.datasource.hikari.leakDetectionThreshold=2000
spring.jpa.open-in-view=false
#logging.level.com.zaxxer.hikari=DEBUG

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update


drive.url=https://drive.arya.digital/
predict.url=http://136.244.82.239:8999/
predict.method=predict
training.url=http://95.179.159.26:8000/


# Server port information
#server.port = 8084

logging.level.root=info
logging.level.com.ocr.controllers=debug
spring.profiles.active=dev
logging.console=off
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
logging.path=logs
logging.file=${logging.path}/log.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n

server.servlet.context-path=/ocr/v1.0

spring.kafka.consumer.bootstrap-servers=95.179.138.108:9094
spring.kafka.consumer.group-id=mygroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=95.179.138.108:9094
#spring.kafka.producer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer







