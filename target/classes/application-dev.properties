#spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://95.179.189.132:31327/postgresdb}
#spring.datasource.username=${POSTGRES_USER:}
#spring.datasource.password=${POSTGRES_PASSWORD:}
#spring.datasource.hikari.max-lifetime=600000
#spring.datasource.testWhileIdle=true
#spring.datasource.test-on-borrow=true
#spring.datasource.hikari.leakDetectionThreshold=3000
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.open-in-view=false
#
## Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
#
## Because detection is disabled you have to set correct dialect by hand.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
#
#
#spring.jpa.show-sql=false
#spring.jpa.hibernate.ddl-auto=update
#
#drive.url=https://drive.arya.digital/
#predict.url=http://136.244.82.239:8999/
#predict.method=async_predict
#training.url=http://95.179.159.26:8000/
#
#
## Show details of health endpoint
#management.endpoint.health.show-details=always
#
## Server port information
##server.port = 8085
#
#logging.level.root=info
#logging.level.com.ocr.controllers=debug
#spring.profiles.active=dev
#logging.console=on
#logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
#logging.path=logs
#logging.file=${logging.path}/log.log
#logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
#
#server.servlet.context-path=/ocr/v1.0